<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:p="http://www.springframework.org/schema/p"  
    xmlns:context="http://www.springframework.org/schema/context" 
    xmlns:aop="http://www.springframework.org/schema/aop"  
    xmlns:mvc="http://www.springframework.org/schema/mvc"  
    xsi:schemaLocation="http://www.springframework.org/schema/beans    
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd    
                        http://www.springframework.org/schema/context    
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd    
                        http://www.springframework.org/schema/aop 
                        http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
                        http://www.springframework.org/schema/mvc    
                        http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">  
    <!-- 自动扫描 -->  
    <context:component-scan base-package="cn.com.eap" />
    <bean id="commonConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:config.properties</value>
				<value>classpath:jdbc.properties</value>
				<value>classpath:sms.properties</value>
			</list>
		</property>
	</bean>
	
    <bean id="databaseIdProvider" class="org.apache.ibatis.mapping.VendorDatabaseIdProvider">
		<property name="properties">
			<props>
				<prop key="MySQL">mysql</prop>
			</props>
		</property>
	</bean>
  <!-- 邮件配置信息 -->
	<bean id="mailConfig" class="cn.com.tsjx.common.config.MailConfig">
	    <property name="smtpFromMail" value="${mail.smtpFromMail}" />
	    <property name="smtpHost" value="${mail.smtpHost}" />
	    <property name="smtpPort" value="${mail.smtpPort}" />
	    <property name="smtpUsername" value="${mail.smtpUsername}" />
	    <property name="smtpPassword" value="${mail.smtpPassword}" />
	</bean>
	
		<!-- SMTP邮件服务配置 -->
	<bean id="javaMailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="javaMailProperties">
			<props>
				<prop key="mail.smtp.auth">true</prop>
				<prop key="mail.smtp.timeout">25000</prop>
				<!-- SSL连接配置 -->
				<!-- <prop key="mail.smtp.starttls.enable">true</prop> <prop key="mail.smtp.socketFactory.class">javax.net.ssl.SSLSocketFactory</prop> -->
			</props>
		</property>
	</bean>
	
	<!-- 短信异步发送 -->
	<bean id="taskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<!-- 核心线程数 -->
		<property name="corePoolSize" value="10" />
		<!-- 最大线程数 -->
		<property name="maxPoolSize" value="50" />
		<!-- 最大队列数 -->
		<property name="queueCapacity" value="10000" />
		<!-- 线程池维护线程所允许的空闲时间 -->
		<property name="keepAliveSeconds" value="60" />
	</bean>
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"  
        destroy-method="close">  
        <property name="driverClassName" value="${jdbc.driver}" />  
        <property name="url" value="${jdbc.url}" />  
        <property name="username" value="${jdbc.username}" />  
        <property name="password" value="${jdbc.password}" />  
        <!-- 初始化连接大小 -->  
        <property name="initialSize" value="${jdbc.initialSize}"></property>  
        <!-- 连接池最大数量 -->  
        <property name="maxActive" value="${jdbc.maxActive}"></property>  
        <!-- 连接池最大空闲 -->  
        <property name="maxIdle" value="${jdbc.maxIdle}"></property>  
        <!-- 连接池最小空闲 -->  
        <property name="minIdle" value="${jdbc.minIdle}"></property>  
        <!-- 获取连接最大等待时间 -->  
        <property name="maxWait" value="${jdbc.maxWait}"></property>  
    </bean>  
  
	
    <!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->  
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
        <property name="dataSource" ref="dataSource" />  
        <property name="databaseIdProvider" ref="databaseIdProvider" />
        <property name="configLocation" value="classpath:/mybatis/mybatis-config.xml" />
        <!-- 自动扫描mapping.xml文件 -->  
        <property name="mapperLocations">
			<array>
				<value>classpath:/mybatis/mybatis-pager.xml</value>
				<value>classpath*:cn/com/eap/**/dao/mapper/*.xml</value>
				<value>classpath*:cn/com/eap/**/dao/custom/*.xml</value>
			</array>
		</property>
    </bean>  
  
    <!-- MyBatis数据操作模板 -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate" scope="prototype">
		<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>
  
    <!-- DAO接口所在包名，Spring会自动查找其下的类 -->  
<!--     <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">   -->
<!--        <property name="basePackage" value="cn.com.tsjx.user.dao" />   -->
<!--     </bean>   -->
  
    <!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->  
    <bean id="transactionManager"  
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
        <property name="dataSource" ref="dataSource" />  
    </bean>  
  <!-- MyBatis数据操作模板拦截 -->
	<bean id="sqlSessionInterceptor" class="cn.com.tsjx.interceptor.SqlSessionInterceptor" />

	<!-- AOP配置 -->
	<aop:config>
		<aop:pointcut id="sqlSessionPointcut" expression="execution(* org.mybatis.spring.SqlSessionTemplate.*(..))" />
		<aop:advisor advice-ref="sqlSessionInterceptor" pointcut-ref="sqlSessionPointcut" />
	</aop:config>
</beans>  