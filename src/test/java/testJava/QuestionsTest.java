package testJava;

import cn.com.eap.web.dto.QuestionDto;
import com.alibaba.fastjson.JSON;

import java.util.ArrayList;
import java.util.List;

/**
 * Created by xin.l on 2018/10/6.
 *
 * @author xin.l
 */
public class QuestionsTest {

    private final static String question = "1．我通常\n" + "A. 善于跟别人交往\n" + "B. 沉默寡语\n" + "\n" + "2．如果我是老师，我想教\n" + "A. 实用性强的科目\n" + "B. 理论性强的科目\n" + "\n" + "3．我经常\n" + "A. 感性驾驭理性\n" + "B. 理性驾驭感性\n" + "\n" + "4．出门之前，我通常\n" + "A. 事先做好日程安排\n" + "B. 无计划出门\n" + "\n" + "5．与一群人在一起时，我通常\n" + "A. 与很多人进行交流\n" + "B. 找熟悉的人私下交流\n" + "\n" + "6．我更喜欢与\n" + "A. 想象力丰富的人交流\n" + "B. 有现实感的人交流\n" + "\n" + "7．对我来说更好的评价是\n" + "A. 性情中人 \n" + "B. 合理的人 \n" + "\n" + "8．由我来筹备聚会时，我通常\n" + "A. 事先制定计划，并按照计划进行\n" + "B. 根据情况自由进行 \n" + "\n" + "9．与陌生人时见面时，通常是\n" + "A. 我来介绍其他人\n" + "B. 由别人来介绍我 \n" + "\n" + "10．我想得到他人认可的部分是\n" + "A. 务实、有现实感 \n" + "B. 有创意，有独创精神 \n" + "\n" + "11．我通常\n" + "A. 注重感性甚于理性 \n" + "B. 注重理性甚于感性 \n" + "\n" + "12．在以下情况下我能更好地完成事情\n" + "A. 做突如其来的事情或需要迅速做的事情\n" + "B. 按照精细的计划做事情\n" + "\n" + "13．我通常\n" + "A. 与少数人有较深的交往 \n" + "B. 与各种各样的人进行交流 \n" + "\n" + "14．我更尊重\n" + "A. 较保守，不轻易被人了解的人\n" + "B. 独创一格、有个性，不在乎被人了解的人\n" + "\n" + "15．以下两点中我认为更糟的是\n" + "A. 缺乏同情心 \n" + "B. 不合理 \n" + "\n" + "16．按日程表行事\n" + "A. 让我感到很舒服 \n" + "B. 让我感到很不自在 \n" + "\n" + "17．我在朋友当中\n" + "A. 信息较为闭塞\n" + "B. 信息比较灵通\n" + "\n" + "18．我想交的朋友是\n" + "A. 不断有新创意的人 \n" + "B. 有现实感的人 \n" + "\n" + "19．我更喜欢一起共事的人是\n" + "A. 一向亲切的人 \n" + "B. 一向公正的人 \n" + "\n" + "20．对周末要做的事情做日程安排，对我来说\n" + "A. 比较得心应手\n" + "B. 不太愿意做这种事情 \n" + "C. 想到此事心里就沉甸甸\n" + "\n" + "21．通常我\n" + "A. 能够与任何人进行交流 \n" + "B. 与特定的人或在特定的情况下才能进行交流 \n" + "\n" + "22．我更喜欢阅读\n" + "A. 内容独特、具有独创性的书籍\n" + "B. 条理清晰，准确表达作者想法的书籍\n" + "\n" + "23．我认为更不好的是\n" + "A. 过分亲切 \n" + "B. 不亲切 \n" + "\n" + "24．在日常生活中（这个问题可以选两个）\n" + "A. 我喜欢在迫在眉睫的情况下做事情\n" + "B. 我不喜欢做事时赶时间\n" + "C. 为了不赶时间，我一般事先制定计划 \n" + "\n" + "25．与我初次见面的人\n" + "A. 很快就了解我的兴趣所在 \n" + "B. 有了较深的交往以后才知道我的兴趣所在 \n" + "\n" + "26．处理日常事务时，我通常\n" + "A. 喜欢按照惯例处理\n" + "B. 喜欢想出独特的方法去处理 \n" + "\n" + "27．我更关注的是\n" + "A. 尊重别人的感情 \n" + "B. 保护别人的权利 \n" + "\n" + "28．需要处理特殊的事情时，我通常\n" + "A. 事先小心制定计划 \n" + "B. 在处理事情的过程中根据情况找出相应的对策 \n" + "\n" + "29．我一般\n" + "A. 能够自由地表达自己的情感和感受\n" + "B. 不愿流露自己的情感和感受，而是将它们埋在心里\n" + "\n" + "30．我更偏好\n" + "A. 独具一格的生活方式 \n" + "B. 普普通通的生活方式\n" + "\n" + "31．我认为更贴近自己的是\n" + "A. 温和的\n" + "B. 强健的\n" + "\n" + "32．在做某件事情时若事先被告知实施计划\n" + "A. 我感到很高兴，因为这样我就可以事先做好准备\n" + "B. 我感到有些懊恼，因为我讨厌被束缚\n" + "\n" + "33．做事情时，我一般\n" + "A. 比别人更积极 \n" + "B. 不如别人积极 \n" + "\n" + "34．我认为更贴近自己的词是\n" + "A. 愿景（Vision）\n" + "B. 常识\n" + "\n" + "35．我认为更贴近自己的词是\n" + "A. 思考\n" + "B. 情感\n" + "\n" + "36．我通常\n" + "A. 喜欢接近截止日期处理事情 \n" + "B. 接近截止日期处理事情感到焦虑 \n" + "\n" + "37．在聚会或派对上\n" + "A. 我有时感到很无聊 \n" + "B. 一般来说都是很愉快的 \n" + "\n" + "38．我认为更重要的是\n" + "A. 在现有环境中找出可能性 \n" + "B. 适应现有的环境 \n" + "\n" + "39．我认为更贴近自己的是\n" + "A. 说服人\n" + "B. 感动人\n" + "\n" + "40．我认为处理每天的日常事务\n" + "A. 没什么不适\n" + "B. 有必要，但每天重复同一件事情会感到不舒服\n" + "\n" + "41．我通常\n" + "A. 在流行的前头\n" + "B. 对流行不感兴趣 \n" + "\n" + "42．一般来说我会\n" + "A. 支持现有体制 \n" + "B. 分析现有体制的问题，并提示改善方案\n" + "\n" + "43．我认为更贴近自己的是\n" + "A. 分析\n" + "B. 同情\n" + "\n" + "44．对应处理的琐事或应购买的东西，\n" + "A. 我经常忘记，事后才想起来 \n" + "B. 为了不忘记，我将这些写在记事本上 \n" + "C. 我会及时处理这些事情 \n" + "\n" + "45．别人一般\n" + "A. 较容易与我交上朋友\n" + "B. 不太容易与我交上朋友 \n" + "\n" + "46．我认为更贴近自己的词是\n" + "A. 事实\n" + "B. 主意（Idea）\n" + "\n" + "47．我认为更贴近自己的是\n" + "A. 正义\n" + "B. 慈爱\n" + "\n" + "48．对我来说更难适应的是\n" + "A. 重复日常事务\n" + "B. 不断变化\n" + "\n" + "49．谈话中若出现窘迫局面，我会\n" + "A. 改换话题 \n" + "B. 开玩笑来摆脱窘迫局面 \n" + "C. 几天以后才想起当时应该怎样说 \n" + "\n" + "50．我认为更贴近自己的是\n" + "A. 描述事实\n" + "B. 抽象思维\n" + "\n" + "51．我认为更贴近自己的是\n" + "A. 内心温暖\n" + "B. 思维犀利\n" + "\n" + "52．处理一周内必须完成的大事时，我会\n" + "A. 首先制定计划，决定事情的先后顺序\n" + "B. 马上着手处理\n" + "\n" + "53．与我亲近的人\n" + "A. 一般了解我的感受 \n" + "B. 若我不说出来还是不太了解我的感受\n" + "\n" + "54．我认为更贴近自己的是\n" + "A. 推论\n" + "B. 确证\n" + "\n" + "55．我认为更贴近自己的是\n" + "A. 有益于人\n" + "B. 施舍于人\n" + "\n" + "56．处理事情时，我一般\n" + "A. 提前开始提早完成 \n" + "B. 快到截止日期急忙完成 \n" + "\n" + "57．聚会时我喜欢\n" + "A. 推动聚会顺利进行 \n" + "B. 让人们自得其乐 \n" + "\n" + "58．我认为更贴近自己的是\n" + "A. 文字本意\n" + "B. 比喻\n" + "\n" + "59．我认为更贴近自己的是\n" + "A. 判决\n" + "B. 奉献\n" + "\n" + "60．如果在某个休息日早上有人问我怎么过一天，我会\n" + "A. 马上说出做什么 \n" + "B. 罗列出很多要做的事情 \n" + "C. 说到时候才能知道该做什么 \n" + "\n" + "61．我认为更贴近自己的是\n" + "A. 充满活力\n" + "B. 安静\n" + "\n" + "62．我认为更贴近自己的是\n" + "A. 想象\n" + "B. 事实\n" + "\n" + "63．我认为更贴近自己的是\n" + "A. 坚定的意志\n" + "B. 温柔的心\n" + "\n" + "64．对我来说日常事务\n" + "A. 容易、舒心\n" + "B. 无聊 \n" + "\n" + "65．以下各题中最贴近我的是\n" + "A. 沉默寡语\n" + "B. 健谈\n" + "\n" + "66．以下各题中最贴近我的是\n" + "A. 制作\n" + "B. 创作\n" + "\n" + "67．以下各题中最贴近我的是\n" + "A. 调解\n" + "B. 判定\n" + "\n" + "68．以下各题中最贴近我的是\n" + "A. 计划\n" + "B. 无计划\n" + "\n" + "69．以下各题中最贴近我的是\n" + "A. 沉着\n" + "B. 活泼\n" + "\n" + "70．以下各题中最贴近我的是\n" + "A. 分辨能力\n" + "B. 魅力\n" + "\n" + "71．以下各题中最贴近我的是\n" + "A. 温柔\n" + "B. 强壮\n" + "\n" + "72．以下各题中最贴近我的是\n" + "A. 系统化\n" + "B. 自由化\n" + "\n" + "73．以下各题中最贴近我的是\n" + "A. 说\n" + "B. 写\n" + "\n" + "74．以下各题中最贴近我的是\n" + "A. 制作\n" + "B. 设计\n" + "\n" + "75．以下各题中最贴近我的是\n" + "A. 原谅\n" + "B. 容忍\n" + "\n" + "76．以下各题中最贴近我的是\n" + "A. 按照计划\n" + "B. 根据情况\n" + "\n" + "77．以下各题中最贴近我的是\n" + "A. 社交\n" + "B. 超然自得\n" + "\n" + "78．以下各题中最贴近我的是\n" + "A. 具体\n" + "B. 抽象\n" + "\n" + "79．以下各题中最贴近我的是\n" + "A. 人\n" + "B. 事\n" + "\n" + "80．以下各题中最贴近我的是\n" + "A. 冲动\n" + "B. 决断\n" + "\n" + "81．以下各题中最贴近我的是\n" + "A. 聚会\n" + "B. 读书\n" + "\n" + "82．以下各题中最贴近我的是\n" + "A. 制造\n" + "B. 发明\n" + "\n" + "83．以下各题中最贴近我的是\n" + "A. 接纳\n" + "B. 判断\n" + "\n" + "84．以下各题中最贴近我的是\n" + "A. 按时\n" + "B. 随时\n" + "\n" + "85．以下各题中最贴近我的是\n" + "A. 基石\n" + "B. 榜样\n" + "\n" + "86．以下各题中最贴近我的是\n" + "A. 小心谨慎\n" + "B. 不拘小节\n" + "\n" + "87．以下各题中最贴近我的是\n" + "A. 不断变化\n" + "B. 永久\n" + "\n" + "88．以下各题中最贴近我的是\n" + "A. 理论\n" + "B. 经验\n" + "\n" + "89．以下各题中最贴近我的是\n" + "A. 同意\n" + "B. 讨论\n" + "\n" + "90．以下各题中最贴近我的是\n" + "A. 规律\n" + "B. 随意\n" + "\n" + "91．以下各题中最贴近我的是\n" + "A. 图画\n" + "B. 文字\n" + "\n" + "92．以下各题中最贴近我的是\n" + "A. 迅速\n" + "B. 慎重\n" + "\n" + "93．以下各题中最贴近我的是\n" + "A. 接受\n" + "B. 改变\n" + "\n" + "94．以下各题中最贴近我的是\n" + "A. 已知\n" + "B. 未知\n";

    public static void main(String[] args) {

        QuestionDto questionDto = new QuestionDto();

        List<QuestionDto.QuestionsBean> questions = new ArrayList<>();

        String[] split = question.split("\n\n");
        int count = 0;
        for (String str : split) {
            String[] split1 = str.split("\n");
            QuestionDto.QuestionsBean questionsBean = new QuestionDto.QuestionsBean();
            List<QuestionDto.QuestionsBean.AnswerBean> answer = new ArrayList<>();
            String[] split2 = split1[0].split("．");
            questionsBean.setNum(Integer.parseInt(split2[0]));
            questionsBean.setTopic(split2[1]);
            questionsBean.setAnswer(answer);
            String[] split3 = split1[1].split(". ");
            QuestionDto.QuestionsBean.AnswerBean answerBean = new QuestionDto.QuestionsBean.AnswerBean();

            answerBean.setOptions(split3[0]);
            answerBean.setDescription(split3[1]);
            answer.add(answerBean);
            String[] split4 = split1[2].split(". ");
            answerBean = new QuestionDto.QuestionsBean.AnswerBean();

            answerBean.setOptions(split4[0]);
            answerBean.setDescription(split4[1]);
            answer.add(answerBean);

            if(split1.length>3){
                String[] split5 = split1[3].split(". ");
                answerBean = new QuestionDto.QuestionsBean.AnswerBean();

                answerBean.setOptions(split5[0]);
                answerBean.setDescription(split5[1]);
                answer.add(answerBean);
            }
            questions.add(questionsBean);
            count++;

        }
        questionDto.setQuestions(questions);
        questionDto.setTotal(count);
        System.out.println(JSON.toJSON(questionDto));
    }
}
